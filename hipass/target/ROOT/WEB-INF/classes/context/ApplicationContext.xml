<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

	<context:component-scan base-package="com.corealism.cozsample3" />
	
	<mvc:default-servlet-handler />
	
	<!-- Properties start -->
	<bean id="configProp" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="fileEncoding" value="UTF-8"/>
	    <property name="locations">
	        <list>
	            <value>classpath:config/properties/${serverType}_properties.xml</value>
	        </list>
	    </property>
	</bean>
	
	<!-- Make static method -->
	<bean id="force-init" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod" value="com.corealism.cozsample3.common.Constants.setConfigProp" /> <!-- 환경변수 Static하게 사용하기 위한 설정 -->
		<property name="arguments">
			<list>
				<ref bean="configProp" />
			</list>
		</property>
	</bean>
	<bean id="constants" class="com.corealism.cozsample3.common.Constants" depends-on="force-init"/>
	<!-- Properties end -->
	
	<!-- DB start -->
	<bean id="dataSource" class="com.corealism.cozsample3.common.util.EncriptBasicDataSource">
		<property name="driverClassName" value="net.sf.log4jdbc.DriverSpy" />
		<property name="url" value="#{configProp['jdbc.url']}" />
		<property name="username" value="#{configProp['jdbc.username']}" />
		<property name="password" value="#{configProp['jdbc.password']}" />
		<property name="validationQuery" value="SELECT 1"/>
		<property name="testWhileIdle" value="true"/>
		<property name="timeBetweenEvictionRunsMillis" value="60000"/>		
	</bean>	
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- For Transaction : type "explicit" -->
	<tx:annotation-driven transaction-manager ="transactionManager"/>
	
	<!-- For Transaction : type "advice" -->
	<!-- <aop:config proxy-target-class="true">
		<aop:advisor id="managerTx" advice-ref="txAdvice" pointcut="execution(* *..*Service.*(..))" />
	</aop:config>
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="update*"   propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="*" read-only="true" propagation="SUPPORTS" />
		</tx:attributes>
	</tx:advice> -->
	 
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:com/corealism/cozsample3/www/*/*Mapper.xml" />
		<!-- <property name="mapperLocations" value="classpath:sqlmap/*Mapper.xml" /> -->
		<property name="typeAliasesPackage" value="com.corealism.cozsample3.common.models" />
	</bean>    
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.corealism.cozsample3" />
		<property name="annotationClass" value="org.springframework.stereotype.Repository"/>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
	<!-- DB end -->
		
	<!-- URL handler start -->
	<bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
		<property name="order" value="0" />
		<property name="mappings">
			<props>
				<prop key="/login/login.do">loginController</prop>
			</props>
		</property>
	</bean>
	
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
		<property name="order" value="1" />
		<property name="interceptors">
			<list>
				<ref bean="commonInterceptor" />
			</list>
		</property>
	</bean>
	
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />
	<!-- URL handler end -->

	<!-- ViewResolver start -->
	<!-- BeanNameViewResolver start -->
	<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" >
		<property name="order" value="0" />
	</bean>
	
	<bean id="excelView" class="com.corealism.cozsample3.common.util.ExcelUtil" />
	<!-- BeanNameViewResolver end -->
	
	<!-- ContentNegotiatingViewResolver -->
	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="order" value="1"/>
		<property name="mediaTypes">
			<map>
				<entry key="json" value="application/json" />
				<entry key="xml" value="application/xml" />
			</map>
		</property>
		<property name="defaultViews">
			<list>
				<bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" />
				<bean class="org.springframework.web.servlet.view.xml.MarshallingView">
					<property name="marshaller">
						<bean class="org.springframework.oxm.castor.CastorMarshaller" />
					</property>
				</bean>
			</list>
		</property>
	</bean>
	
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="order" value="2" />
		<property name="prefix" value="/WEB-INF/view/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<!-- ViewResolver end -->
	
	<!-- MultipartResolver start -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="100000000" /><!-- 100MB -->
		<property name="uploadTempDir" ref="fileUploadTempDir" />
	</bean>
	<bean id="fileUploadTempDir" class="org.springframework.core.io.FileSystemResource">
		<constructor-arg value="#{configProp['system.fileUploadTempDir']}" />
	</bean>
	<!-- MultipartResolver end -->	

</beans>